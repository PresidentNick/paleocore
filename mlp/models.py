from django.contrib.gis.db import models
from mysite.ontologies import BASIS_OF_RECORD_VOCABULARY, ITEM_TYPE_VOCABULARY, COLLECTING_METHOD_VOCABULARY, COLLECTOR_CHOICES


# Model for occurrence table generated by inspect.db
# TODO prune unused fields, commented below, from the database
class Occurrence(models.Model):
    objectid = models.IntegerField(primary_key=True)
    barcode = models.IntegerField(blank=True, null=True)
    date_last_modified = models.DateTimeField("Date Last Modified",blank=True, null=True, db_column="datelastmodified")
    basis_of_record = models.CharField("Basis of Record", max_length=50, blank=True, db_column="basisofrecord", choices=BASIS_OF_RECORD_VOCABULARY)
    item_type = models.CharField("Item Type", max_length=255, blank=True, db_column="itemtype", choices=ITEM_TYPE_VOCABULARY)
    institutional_code = models.CharField("Institutional Code", max_length=20, blank=True, db_column="institutionalcode")
    collection_code = models.CharField("Collection Code", max_length=20, blank=True, db_column="collectioncode", default= 'MLP')
    # Note we're not using localities!
    item_number = models.CharField("Item Number", max_length=50, blank=True, db_column="itemnumber")
    item_part = models.CharField("Item Part", max_length=10, blank=True, db_column="itempart")
    catalog_number = models.CharField("Catalog Number", max_length=255, blank=True, db_column="catalognumber")
    # TODO add richtext field for remarks
    remarks = models.CharField(max_length=255, blank=True)
    item_scientific_name = models.CharField("Item Scientific Name", max_length=255, blank=True, db_column="itemscientificname")
    item_description = models.CharField("Item Description", max_length=255, blank=True, db_column="itemdescription")
    georeference_remarks = models.CharField(max_length=50, blank=True, db_column="georeferenceremarks")
    collecting_method = models.CharField("Collecting Method", max_length=50, blank=True, db_column="collectingmethod", choices=COLLECTING_METHOD_VOCABULARY)
    related_catalog_items = models.CharField("Related Catalog Items", max_length=50, blank=True, db_column="relatedcatalogitems")
    collector = models.CharField(max_length=50, blank=True, choices=COLLECTOR_CHOICES)
    finder = models.CharField(max_length=50, blank=True)
    disposition = models.CharField(max_length=255, blank=True)
    field_number = models.DateTimeField(blank=True, null=True, db_column="fieldnumber")
    year_collected = models.IntegerField(blank=True, null=True, db_column="yearcollected")
    individual_count = models.IntegerField(blank=True, null=True, db_column="individualcount", default=1)
    preparation_status = models.CharField(max_length=50, blank=True, db_column="preparationstatus")
    stratigraphicmarkerupper = models.CharField(max_length=255, blank=True)
    distancefromupper = models.DecimalField(max_digits=38, decimal_places=8, blank=True, null=True)
    stratigraphicmarkerlower = models.CharField(max_length=255, blank=True)
    distancefromlower = models.DecimalField(max_digits=38, decimal_places=8, blank=True, null=True)
    stratigraphicmarkerfound = models.CharField(max_length=255, blank=True)
    distancefromfound = models.DecimalField(max_digits=38, decimal_places=8, blank=True, null=True)
    stratigraphicmarkerlikely = models.CharField(max_length=255, blank=True)
    distancefromlikely = models.DecimalField(max_digits=38, decimal_places=8, blank=True, null=True)
    stratigraphicmember = models.CharField(max_length=255, blank=True)
    analytical_unit = models.CharField(max_length=255, blank=True, db_column="analyticalunit")
    analyticalunit2 = models.CharField(max_length=255, blank=True)
    analyticalunit3 = models.CharField(max_length=255, blank=True)
    #TODO convert to in_situ and ranked to boolean
    in_situ = models.SmallIntegerField(blank=True, null=True, db_column="insitu", default=0)
    ranked = models.SmallIntegerField(blank=True, null=True)
    image = models.FileField(max_length=255, blank=True, upload_to="uploads/images/mlp", db_column="imageurl")
    weathering = models.SmallIntegerField(blank=True, null=True)
    surface_modification = models.CharField(max_length=255, blank=True, db_column="surfacemodification")
    #TODO Change presentation to show only 2 decimal places
    point_x = models.DecimalField(max_digits=38, decimal_places=8, blank=True, null=True)
    point_y = models.DecimalField(max_digits=38, decimal_places=8, blank=True, null=True)
    #TODO Change ot boolean
    problem = models.SmallIntegerField(blank=True, null=True)
    problem_comment = models.CharField(max_length=255, blank=True, db_column="problemcomment")
    #TODO change field name to geom
    shape = models.GeometryField(srid=32637, blank=True, null=True)
    objects = models.GeoManager()

    class Meta:
        managed = False
        db_table = 'mlp_occurrence'


